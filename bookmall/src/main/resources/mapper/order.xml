<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="orders"> <!-- mapper파일의 이름 -->

	<!-- orders insert  -->
	<insert id="insert" parameterType="bookmall.orders.OrderVo" >
		INSERT INTO orders (
			userno, order_date, name, receiver_name, zipcode, addr1, addr2, receiver_phone, methodOfPayment, bankToDeposit
			, nameOfDepositor, imp_uid, apply_num, creditCard, paid_amount, status, bookname
		) VALUES (			
			#{userno}, NOW(), #{name},#{receiver_name},#{zipcode},#{addr1},#{addr2},#{receiver_phone},#{methodOfPayment},#{bankToDeposit}
			,#{nameOfDepositor}, #{imp_uid}, #{apply_num}, #{creditCard}, #{paid_amount}, #{status}, #{bookname }
		)
		<selectKey keyProperty="orderno" resultType="int" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<!-- 바로구매 상품 정보 insert  -->
	<insert id="bookInsert" parameterType="bookmall.book.BookVo" >
		INSERT INTO order_detail (
			orderno, bookno, bookcount, salesprice, total_price
		) VALUES (			
			#{orderno}, #{bookno}, #{bookcount}, #{salesprice}, #{total_price}
		)
	</insert>
	
	<!-- 장바구니 상품 정보 insert -->    
	<insert id="bookListInsert" parameterType="bookmall.cart.CartDto">
			INSERT INTO order_detail (
				orderno, bookno, bookcount, salesprice, total_price
			)
			VALUES (
				#{orderno}, #{bookno}, #{bookcount}, #{salesprice}, #{total_price}
			)
	</insert>
	
	<!-- 새 주소 insert -->    
	<insert id="addrInsert" parameterType="bookmall.addr.AddrVo">
		INSERT INTO addresslist (
			addno, userno, division ,name, tel, tel1, tel2, tel3, zipcode, address, address2, regdate
		) values(
			#{addno}, #{userno}, #{division}, #{name}, #{tel}, #{tel1}, #{tel2}, #{tel3}, #{zipcode},#{address},#{address2},NOW()
		)
	</insert>
	
	<!-- 회원정보 가져오기 -->
	<select id="userSelect" parameterType="bookmall.user.UserVo" resultType="bookmall.user.UserVo">
		SELECT email, userno, name, tel, zipcode, addr1, addr2 
		FROM user 
		WHERE userno = #{userno} 
	</select>
	
	<!-- 책정보 가져오기 -->
	<select id="bookSelect" parameterType="bookmall.book.BookVo" resultType="bookmall.book.BookVo">
		SELECT bookno, btitle_first, btitle_second, discountrate, salesprice 
		FROM book 
		WHERE bookno = #{bookno} 
	</select> 
	
	<!-- 장바구니에서 책정보 가져오기 -->
	<select id="bookListSelect" parameterType="bookmall.cart.CartDto" resultType="bookmall.cart.CartDto">
		SELECT a.cartno, a.bookcount, b.bookno, b.btitle_first, b.btitle_second, b.discountrate, b.salesprice
		FROM cart a, book b
		WHERE a.bookno = b.bookno
		AND cartno = #{cartno}  
	</select>
	
	<select id="cartnoSelect" parameterType="bookmall.cart.CartDto" resultType="bookmall.cart.CartDto">
		SELECT a.cartno, a.bookcount, b.bookno, b.btitle_first, b.btitle_second, b.discountrate, b.salesprice
		FROM cart a, book b
		WHERE a.bookno = b.bookno
		AND cartno IN (${cartnos})  
	</select>
	
	<!-- 주소록 가져오기 -->
	<select id="addrSelect" parameterType="bookmall.addr.AddrVo" resultType="bookmall.addr.AddrVo">
		SELECT *
		FROM addresslist
		WHERE userno = #{userno} 
	</select>
	
	<!-- 주문완료정보 가져오기 -->
	<select id="orderSelect" parameterType="bookmall.orders.OrderVo" resultType="bookmall.orders.OrderVo">
		SELECT userno, orderno, order_date, addr1, addr2, paid_amount, methodOfPayment
		, bankToDeposit, nameOfDepositor, creditCard, name, receiver_name, bookname
		FROM orders
		WHERE orderno = #{orderno}
		AND userno = #{userno}
	</select>
	
	<!-- 주문 상품에 대한 장바구니 상품 삭제 -->
	<delete id="deleteOrderCart" parameterType="int">
		DELETE FROM cart WHERE  cartno = #{cartno}
	</delete>



	<!-- 관리자  -->
	<sql id = "ordersWhere">
		<where>
			<if test ="searchType ==''">   
			 	(orderno LIKE #{searchWord} OR name LIKE '%${searchWord}%' OR bookname LIKE '%${searchWord}%' )
			</if>
			<if test= "searchType != null and searchType != ''">
			 	${searchType} LIKE '%${searchWord}%'
			</if>
			<if test ="status == null or status == '' ">
			 	and status LIKE '%'
			</if>
			<if test="status != null and status != '' ">  
				and status LIKE #{status}
			</if>
			<if test="methodOfPayment == null or methodOfPayment == '' ">
				and methodOfPayment LIKE '%'  
			</if>
			<if test="methodOfPayment != null and methodOfPayment != '' ">
				and methodOfPayment = #{methodOfPayment}   
			</if>
			
			<!-- 날짜 -->
			<if test="startDate != null and startDate != '' and endDate != null and endDate != ''"> 
				and order_date BETWEEN '${startDate} 00:00:00' AND '${endDate} 23:59:59'
			</if>
			
		</where>
	</sql>	
		
		
	<!-- 관리자 주문 전체 목록 -->
	<select id="totSelect" parameterType="bookmall.admin.orders.OrdersAdminVo" resultType="bookmall.admin.orders.OrdersAdminVo">
		SELECT orderno, userno, name, order_date, creditCard, methodOfPayment, paid_amount, status, receiver_name, bookname
		FROM orders 
		<include refid = "ordersWhere"/>
		ORDER BY userno ASC, orderno ASC
		LIMIT ${startIdx},${numchoose}
	</select>	
	
	<!--  주문 수량 체크 -->
	<select id="count" resultType="int" parameterType="bookmall.admin.orders.OrdersAdminVo">
		SELECT COUNT(*) FROM orders
		<include refid="ordersWhere"/>
	</select>
	
	<update id="update" parameterType="bookmall.admin.orders.OrdersAdminVo">
		UPDATE orders SET 
		status=#{status}
		WHERE orderno=#{orderno}  
	</update>

</mapper>