<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- mapper파일의 이름 -->
<mapper namespace="book"> 

	<!-- 도서 하나만 선택 -->
	<select id="selectOne" parameterType="int" resultType="bookmall.book.BookVo">
		SELECT b.*,
					(SELECT ROUND(AVG(score), 1)
					FROM review AS r
					WHERE r.bookno = b.bookno
					GROUP BY r.bookno
					) AS review_score,
					(SELECT IFNULL(SUM(bookcount), 0)
					FROM order_detail AS od
					WHERE od.bookno = b.bookno
					) AS sales
		FROM book AS b
		WHERE bookno = #{bookno}
	</select>
	
	<!-- 도서 목록 -->
	<select id="selectList" resultType="bookmall.book.BookVo" parameterType="bookmall.book.BookVo">
		SELECT b.*,
					(SELECT IFNULL(SUM(bookcount), 0) 
					FROM order_detail AS od
					WHERE od.bookno = b.bookno
					) AS sales,
		            (SELECT ROUND(AVG(score), 1)
		            FROM review AS r
		            WHERE r.bookno = b.bookno
		            GROUP BY r.bookno
		            ) AS score,
		            (SELECT COUNT(r.bookno)
		            FROM review AS r
		            WHERE r.bookno = b.bookno
		            GROUP BY r.bookno
		            ) AS review_count,
		            (SELECT ROUND(AVG(score), 1)
		            FROM review AS r
		            WHERE r.bookno = b.bookno
		            GROUP BY r.bookno
		            ) AS review_score
		FROM book AS b
		WHERE NOT bstatus = 1
		<if test = "searchWord != null and searchWord != ''">
			AND (
					b.btitle_first LIKE CONCAT('%', #{searchWord, jdbcType=VARCHAR}, '%') 
					OR b.btitle_second LIKE CONCAT('%', #{searchWord, jdbcType=VARCHAR}, '%') 
					OR b.author LIKE CONCAT('%', #{searchWord, jdbcType=VARCHAR}, '%')
				)
		</if>
		<if test = "blevel == 1">
			AND b.bookno IN (SELECT bookno 
							FROM book_category_mapping
							WHERE bcategoryno IN (SELECT bcategoryno
													FROM book_category
													WHERE bparentno = #{bcategoryno}))
		</if>
		<if test = "blevel == 2">
			AND b.bookno IN (SELECT bookno
							FROM book_category_mapping
							WHERE bcategoryno = #{bcategoryno})	
		</if>
		<if test='listOrder != null'>
			<choose>
				<when test='listOrder == "sales"'>
					ORDER BY sales DESC, score DESC
				</when>
				<when test='listOrder == "score"'>
					ORDER BY score DESC, review_count DESC
				</when>
				<when test='listOrder == "newBook"'>
					ORDER BY pubdate DESC, sales DESC
				</when>
				<when test='listOrder == "lowPrice"'>
					ORDER BY salesprice ASC, sales DESC
				</when>
				<when test='listOrder == "highPrice"'>
					ORDER BY salesprice DESC, sales DESC
				</when>
				<when test='listOrder == "review_count"'>
					ORDER BY review_count DESC, sales DESC
				</when>
			</choose>
		</if>
		<if test='listOrder == null'>
			ORDER BY sales DESC
		</if>
		LIMIT ${startIdx}, ${numchoose}
	</select>
	
	<!-- (관리자) 도서 목록 -->
	<select id="selectAdminList" resultType="bookmall.book.BookVo" parameterType="bookmall.book.BookVo">
		SELECT *
		FROM book AS b
		<where>
			<if test='searchType == "all" and searchWord != null and searchWord != ""'>
				AND (
					b.btitle_first LIKE CONCAT('%', #{searchWord, jdbcType=VARCHAR}, '%') 
					OR b.btitle_second LIKE CONCAT('%', #{searchWord, jdbcType=VARCHAR}, '%') 
					OR b.author LIKE CONCAT('%', #{searchWord, jdbcType=VARCHAR}, '%')
				)
			</if>
			<if test='searchType == "btitle" and searchWord != null and searchWord != ""'>
				AND (
					b.btitle_first LIKE CONCAT('%', #{searchWord, jdbcType=VARCHAR}, '%') 
					OR b.btitle_second LIKE CONCAT('%', #{searchWord, jdbcType=VARCHAR}, '%') 
				)
			</if>
			<if test='searchType == "author" and searchWord != null and searchWord != ""'>
				AND (
					b.author LIKE CONCAT('%', #{searchWord, jdbcType=VARCHAR}, '%')
				)
			</if>
		</where>
		ORDER BY b.bookno ASC
		LIMIT ${startIdx}, ${numchoose}
	</select>
	
	<!-- 페이징 처리를 위한 도서 카운트 -->
	<select id="bookCount" resultType="int" parameterType="bookmall.book.BookVo">
		SELECT COUNT(*)
		FROM(SELECT b.*,
					(SELECT IFNULL(SUM(bookcount), 0) 
					FROM order_detail AS od
					WHERE od.bookno = b.bookno
					) AS sales,
		           (SELECT IFNULL(AVG(r.score), 0)
		            FROM review AS r
		            WHERE r.bookno = b.bookno
		            GROUP BY r.bookno
		            ) AS score,
		            (SELECT COUNT(r.bookno)
		            FROM review AS r
		            WHERE r.bookno = b.bookno
		            GROUP BY r.bookno
		            ) AS review_count
			FROM book AS b
		WHERE NOT bstatus = 1
		<if test = "searchWord != null and searchWord != ''">
			AND (
					b.btitle_first LIKE CONCAT('%', #{searchWord, jdbcType=VARCHAR}, '%') 
					OR b.btitle_second LIKE CONCAT('%', #{searchWord, jdbcType=VARCHAR}, '%') 
					OR b.author LIKE CONCAT('%', #{searchWord, jdbcType=VARCHAR}, '%')
				)
		</if>
		<if test = "blevel == 1">
			AND b.bookno IN (SELECT bookno 
							FROM book_category_mapping
							WHERE bcategoryno IN (SELECT bcategoryno
													FROM book_category
													WHERE bparentno = #{bcategoryno}))
		</if>
		<if test = "blevel == 2">
			AND b.bookno IN (SELECT bookno
							FROM book_category_mapping
							WHERE bcategoryno = #{bcategoryno})	
		</if>
		) AS book
	</select>
	
	<!-- (관리자) 페이징 처리를 위한 도서 카운트 -->
	<select id="AdminbookCount" resultType="int" parameterType="bookmall.book.BookVo">
		SELECT COUNT(*)
		FROM book As b
		<where>
			<if test='searchType == "all" and searchWord != null and searchWord != ""'>
				AND (
					b.btitle_first LIKE CONCAT('%', #{searchWord, jdbcType=VARCHAR}, '%') 
					OR b.btitle_second LIKE CONCAT('%', #{searchWord, jdbcType=VARCHAR}, '%') 
					OR b.author LIKE CONCAT('%', #{searchWord, jdbcType=VARCHAR}, '%')
				)
			</if>
			<if test='searchType == "btitle" and searchWord != null and searchWord != ""'>
				AND (
					b.btitle_first LIKE CONCAT('%', #{searchWord, jdbcType=VARCHAR}, '%') 
					OR b.btitle_second LIKE CONCAT('%', #{searchWord, jdbcType=VARCHAR}, '%') 
				)
			</if>
			<if test='searchType == "author" and searchWord != null and searchWord != ""'>
				AND (
					b.author LIKE CONCAT('%', #{searchWord, jdbcType=VARCHAR}, '%')
				)
			</if>
		</where>
	</select>
	
	<!-- 새로 나온 도서 -->
	<select id="newBook" parameterType="bookmall.book.BookVo" resultType="bookmall.book.BookVo">
		SELECT *
		FROM book
		WHERE NOT bstatus = 1 AND classify = #{classify}
		ORDER BY pubdate DESC
		LIMIT 4;
	</select>
	
	<!-- 인기 있는 도서 -->
	<select id="hotBook" parameterType="bookmall.book.BookVo" resultType="bookmall.book.BookVo">
		SELECT *
		FROM book
		WHERE NOT bstatus = 1 AND classify = #{classify}
		LIMIT 6;
	</select>
	
	<!-- 도서 상세 정보 - 카테고리 -->
	<select id="selectCate" parameterType="int" resultType="java.util.LinkedHashMap">
		SELECT
    		(SELECT bcategoryname 
    		FROM book_category 
    		WHERE bcategoryno = bc.bparentno) AS parentname,
    		bcategoryname
		FROM book_category AS bc
		WHERE bcategoryno IN (SELECT bcategoryno 
							FROM book_category_mapping 
							WHERE bookno = #{bookno});
	</select>
	
	
	<!-- 카테고리 명 -->
	<select id="cateNameList" resultType="bookmall.book.BookVo" parameterType="bookmall.book.BookVo">
		SELECT
			a.bcategoryno AS blev1, 
			b.bcategoryno AS blev2, 
			a.bcategoryname AS blev1name, 
			b.bcategoryname AS blev2name, 
			a.bclassify AS bclassify
		FROM (
			SELECT bcategoryno, bcategoryname, bclassify 
			FROM book_category 
			WHERE blevel = 1 AND bclassify = #{bclassify}
		) AS a
		JOIN (
			SELECT bcategoryno, bparentno, bcategoryname 
			FROM book_category 
			WHERE blevel = 2 AND bclassify = #{bclassify}
		) AS b
		ON a.bcategoryno = b.bparentno;
	</select>
	
	<!-- (관리자) 도서 등록시 필요한 카테고리 검색 -->
	<select id="cateList" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		SELECT
			(SELECT bcategoryname
			FROM book_category
			WHERE bcategoryno = bc.bparentno) AS parentname,
			bclassify,
			bcategoryname,
			bcategoryno,
			blevel
		FROM book_category AS bc
		WHERE bclassify = #{bclassify}   
		<if test="blevel == 0">
			AND blevel = 1
		</if>   
		<if test="blevel != 0">
			AND blevel = 2 AND bparentno = #{bcategoryno}
		</if>
	</select>
	
	<!-- (관리자) 도서 등록 -->
	<insert id="insert" parameterType="bookmall.book.BookVo">
		INSERT INTO book (
			isbn, btitle_first, btitle_second, author, publisher, pubdate, price, discountrate, 
			salesprice, classify, translator, bpages, bweight, bwidth, bvertical, bheight, 
			bstack, bintroduce, bindex, bthumb_org, bthumb_real, regdate
		) VALUES (
			#{isbn}, #{btitle_first}, #{btitle_second}, #{author}, #{publisher}, #{pubdate}, #{price}, #{discountrate},
			#{salesprice}, #{classify}, #{translator}, #{bpages}, #{bweight}, #{bwidth}, #{bvertical}, #{bheight}, 
			#{bstack}, #{bintroduce}, #{bindex}, #{bthumb_org}, #{bthumb_real}, NOW()  
		)
	</insert>
	
	<!-- (관리자)  -->
	<!-- (관리자) 도서 등록시 북_카테고리_매핑 테이블에 정보 등록 -->
	<insert id="insertMapping" parameterType="bookmall.bookcategory.BookCategoryMappingVO">
		<selectKey keyProperty="bookno" resultType="int" order="BEFORE">
			SELECT MAX(bookno) FROM book
		</selectKey>
		INSERT INTO book_category_mapping (
			bookno, bcategoryno
		) VALUES (
			#{bookno}, #{bcategoryno}
		)
	</insert>
	
	<!-- (관리자) 도서 수정 -->
	<update id="update" parameterType="bookmall.book.BookVo">
		UPDATE book
		SET btitle_first = #{btitle_first},
			btitle_second = #{btitle_second},
			author = #{author},
			publisher = #{publisher},
			pubdate = #{pubdate},
			price = #{price},
			discountrate = #{discountrate},
			salesprice = #{salesprice},
			classify = #{classify},
			translator = #{translator},
			bpages = #{bpages},
			bweight = #{bweight},
			bwidth = #{bwidth},
			bvertical = #{bvertical},
			bheight = #{bheight},
			bintroduce = #{bintroduce},
			bindex = #{bindex},
			bthumb_org = #{bthumb_org},
			bthumb_real = #{bthumb_real},
			bstack = #{bstack},
			moddate = NOW()
		WHERE bookno = #{bookno}
	</update>
	
	<!-- (관리자) 도서 삭제 -->
	<update id="delete" parameterType="bookmall.book.BookVo">
		UPDATE book 
		SET bstatus = 1
		WHERE bookno = #{bookno}
	</update>
	
	<select id="isbnCheck" parameterType="String" resultType="int">
		SELECT COUNT(*) 
		FROM book 
		WHERE isbn = #{isbn}
	</select>
</mapper>